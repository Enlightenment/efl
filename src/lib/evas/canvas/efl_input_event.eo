import efl_input_types;

mixin Efl.Input.Event requires Efl.Object extends Efl.Duplicate
{
   [[Represents a generic event data.

     Note: Most Efl Events do not carry Efl Objects, rather simple data
           structures. This class is intended to carry more complex event
           data, such as pointer events.

     @since 1.23
   ]]
   c_prefix: efl_input;
   data: null;
   methods {
      @property timestamp @pure_virtual {
         [[The time at which an event was generated.

           If the event is generated by a server (eg. X.org or Wayland), then
           the time may be set by the server. Usually this time will be based
           on the monotonic clock, if available, but this class can not
           guarantee it.
         ]]
         set { [[Call this when generating events manually.]] }
         get {}
         values {
            ms: double; [[Time in milliseconds when the event happened.]]
         }
      }
      reset @pure_virtual {
         [[Resets the internal data to 0 or default values.]]
      }
      @property device @pure_virtual {
         [[Input device that originated this event.]]
         values {
            dev: Efl.Input.Device; [[Input device origin]]
         }
      }
      @property event_flags @pure_virtual {
         [[Extra flags for this event, may be changed by the user.]]
         values {
            flags: Efl.Input.Flags; [[Input event flags]]
         }
      }
      @property processed {
         [[$true if @.event_flags indicates the event is on hold.]]
         values {
            val: bool; [[$true if the event is on hold, $false otherwise]]
         }
      }
      @property scrolling {
         [[$true if @.event_flags indicates the event happened while scrolling.]]
         values {
            val: bool; [[$true if the event happened while scrolling, $false otherwise]]
         }
      }
      @property fake {
         [[$true if the event was fake, not triggered by real hardware.]]
         get {}
         values {
            val: bool; [[$true if the event was not from real hardware, $false otherwise]]
         }
      }
   }
   implements {
      Efl.Object.provider_find;
   }
}
