interface Efl.Ui.Range_Display
{
   [[Interface that contains properties regarding the displaying of a value within a range.

     A value range contains a value restricted between specified minimum and maximum
     limits at all times.
     This can be used for progressbars, sliders or spinners, for example.
   ]]
   c_prefix: efl_ui_range;
   methods {
      @property range_value {
         [[Control the value (position) of the widget within its valid range.

           Values outside the limits defined in @.range_limits are ignored and an error
           is printed.
         ]]
         set {
         }
         get {
         }
         values {
            val: double; [[The range value (must be within the bounds of @.range_limits).]]
         }
      }
      @property range_limits {
         [[Set the minimum and maximum values for given range widget.

           If the current value is less than $min, it will be updated to $min.
           If it is bigger then $max, will be updated to $max. The resulting value
           can be obtained with @Efl.Ui.Range_Display.range_value.get.

           The default minimum and maximum values may be different for each class.

           Note: maximum must be greater than minimum, otherwise behavior
           is undefined.
         ]]
         set {
         }
         get {
         }
         values {
            min: double; [[The minimum value.]]
            max: double; [[The maximum value.]]
         }
      }
   }
   events {
      changed: void; [[Emitted when the @.range_value is getting changed.]]
      min,reached: void; [[Emitted when the @.range_value has reached the minimum of @.range_limits.]]
      max,reached: void; [[Emitted when the $range_value has reached the maximum of @.range_limits.]]
   }
}
