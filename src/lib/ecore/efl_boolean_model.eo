class @beta Efl.Boolean_Model extends Efl.Composite_Model
{
   [[@Efl.Model that efficiently stores boolean properties (they can only be $true or $false).

     Internally the values are stored in a compact bit buffer, taking up minimum memory.
     An example usage is @Efl.Ui.Select_Model.
   ]]
   methods {
      boolean_add {
         [[Adds a new named boolean property with a default value.]]
         params {
            @in name: string; [[The name of the new boolean property.]]
            @in default_value: bool; [[Default value for new boolean property.]]
	 }
      }
      boolean_del {
         [[Deletes an existing named boolean property.]]
         params {
            @in name: string; [[Name of the property to be deleted.]]
	 }
      }
      boolean_iterator_get {
         [[Gets an iterator that will quickly find all the indices with the requested value for a specific property.]]
         params {
            @in name: string; [[The name of the property to examine.]]
            @in request: bool; [[The value to look for.]]
         }
         return: iterator<ptr(uint64)>; [[The iterator that is valid until any change is made on the model.]]
      }
   }
   implements {
      Efl.Model.properties { get; }
      Efl.Model.property { get; set; }
      Efl.Object.constructor;
      Efl.Object.destructor;
   }
}
