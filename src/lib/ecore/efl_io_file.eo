class @beta Efl.Io.File extends Efl.Loop_Fd
                        implements Efl.File, Efl.Io.Reader_Fd, Efl.Io.Writer_Fd, Efl.Io.Closer_Fd, Efl.Io.Sizer_Fd,
                                   Efl.Io.Positioner_Fd {
    [[File access (open, close, read, write, lseek, ftruncate)

      @Efl.Io.Closer.close_on_exec and
      @Efl.Io.Closer.close_on_invalidate are respected and default to
      $true. @Efl.Io.Closer.close_on_exec.set sets flag O_CLOEXEC.
    ]]

    methods {
        @property flags {
            [[Bitwise OR'ed flags to open the file, like O_CREAT, O_APPEND...

              Defaults to O_RDONLY | O_CLOEXEC.

              The flag O_CLOEXEC will be also managed by
              @Efl.Io.Closer.close_on_exec.set. Setting the property
              after the file is opened will change its blocking
              behavior.
            ]]
            get {
            }

            set {
               [[Constructor property to define flags to open the file]]
            }

            values {
                flags: uint32; [[Flags to open file, see man:open(2).]]
            }
        }

        @property mode {
            [[Mode property]]
            get {
            }

            set {
               [[Constructor property to define mode to open the file]]
            }

            values {
                mode: uint32; [[Mode to open file, see man:open(2).]]
            }
        }
    }

    implements {
        Efl.Object.constructor;
        Efl.Object.destructor;
        Efl.Object.finalize;
        Efl.Loop_Fd.fd_file { set; }
        Efl.Io.Reader.read;
        Efl.Io.Writer.write;
        Efl.Io.Closer.close;
        Efl.Io.Closer.close_on_exec { set; }
        Efl.Io.Sizer.resize;
        Efl.Io.Positioner.seek;
    }
}
