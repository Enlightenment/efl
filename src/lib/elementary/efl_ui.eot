/* Efl.Ui enum and struct types */
import eina_types;

/* FIXME: find a better way to express this */
error @extern Efl.Ui.Theme.Apply_Error.NONE = "Succcess"; [[Successfully applied the requested style from the current theme.]]

error Efl.Ui.Theme.Apply_Error.DEFAULT = "Fallback to default style was enabled for this widget"; [[
   Successfully applied the default style. The widget may look different from
   the rest of the UI if a custom theme is in use, but it should be usable.
]]
error Efl.Ui.Theme.Apply_Error.GENERIC = "An error occurred and no theme could be set for this widget"; [[
   Failed to apply theme. The widget may become unusable.
]]
error Efl.Ui.Theme.Apply_Error.VERSION = "The widget attempted to load a theme that is incompatible with the current EFL version"; [[
   The theme was applied. The widget may not function or look as expected.
]]

enum Efl.Ui.Focus.Direction
{
   [[ Focus directions.

     @since 1.23
   ]]
   previous = 0, [[ previous direction ]]
   next = 1,     [[ next direction ]]
   up = 2,       [[ up direction ]]
   down = 3,     [[ down direction ]]
   right = 4,    [[ right direction ]]
   left = 5,     [[ left direction ]]
   last = 6      [[ last direction ]]
}

enum Efl.Ui.Focus.Move_Policy
{
   [[Focus Movement Policy.
     @since 1.10]]
   click, [[Move focus by mouse click or touch. Elementary focus is set on mouse
            click and this is checked at mouse up time. (default)]]
   move_in, [[Move focus by mouse in. Elementary focus is set on mouse move when the
         mouse pointer is moved into an object.]]
   key_only, [[Move focus by key. Elementary focus is set on key input like
               Left, Right, Up, Down, Tab, or Shift+Tab.]]
}

enum @beta Efl.Ui.Slider_Indicator_Visible_Mode
{
   [[Slider's indicator visibility mode.

     @since 1.13
   ]]
   on_drag,    [[show indicator on mouse down or change in slider value]]
   always,    [[Always show the indicator.]]
   on_focus,  [[Show the indicator on focus]]
   none      [[Never show the indicator ]]
}

enum Efl.Ui.Focus.Autoscroll_Mode
{
   [[Focus Autoscroll Mode

     @since 1.10
   ]]
   show,    [[Directly show the focused region or item automatically.]]
   none,    [[Do not show the focused region or item automatically.]]
   bring_in [[Bring in the focused region or item automatically which might invole the scrolling.]]
}

enum @beta Efl.Ui.Softcursor_Mode
{
   [[Software cursor mode.

     @since 1.7
   ]]
   auto, [[Auto-detect if a software cursor should be used (default).]]
   on,   [[Always use a softcursor.]]
   off   [[Never use a softcursor.]]
}

/* 'on_access_activate' is beta API in the Widget class */
enum @beta Efl.Ui.Activate
{
   [[Accessibility ]]
   default = 0, [[Activate default]]
   up, [[Activate up]]
   down, [[Activate down]]
   right, [[Activate right]]
   left, [[Activate left]]
   back, [[Activate back]]
}

enum @beta Efl.Ui.Widget_Orientation_Mode
{
   [[Widget orientation mode, or how the theme handles screen orientation.

     Note: Support for this feature is highly dependent on the theme in use.
     At the time of writing, the default theme for EFL does not implement
     support for orientation modes.
   ]]
   default, [[Default or automatic mode: if the widget's theme supports
      orientation, it will be handled automatically.]]
   disabled, [[No signal is sent to the widget's theme. Widget's theme will
      not change according to the window or screen orientation.]]
}

enum @beta Efl.Ui.Select_Mode {
   [[Type of multi selectable object.]]
   single, [[Only single child is selected. If a child is selected,
             previous selected child will be unselected.]]
   multi, [[Allow multiple selection of children.]]
   none [[No child can be selected at all.]]
}

/* Types for A11Y (internal/beta API) */
type @beta @extern Efl.Access.Action_Data: __undefined_type; [[Internal struct for accesssibility.]]
